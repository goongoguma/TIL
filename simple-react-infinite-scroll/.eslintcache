[{"/Users/jaehyunan/Documents/TIL/simple-react-infinite-scroll/src/index.js":"1","/Users/jaehyunan/Documents/TIL/simple-react-infinite-scroll/src/App.jsx":"2","/Users/jaehyunan/Documents/TIL/simple-react-infinite-scroll/src/App2.jsx":"3"},{"size":298,"mtime":1623204164679,"results":"4","hashOfConfig":"5"},{"size":2212,"mtime":1611219044427,"results":"6","hashOfConfig":"5"},{"size":2413,"mtime":1611220871866,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10","usedDeprecatedRules":"11"},"75mos1",{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14","usedDeprecatedRules":"15"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"18","usedDeprecatedRules":"11"},"/Users/jaehyunan/Documents/TIL/simple-react-infinite-scroll/src/index.js",["19"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'; // intersection observer\nimport App2 from './App2'; // windowAddEvnetListener\n\nReactDOM.render(\n  <React.StrictMode>\n    <App2 />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n",["20","21"],"/Users/jaehyunan/Documents/TIL/simple-react-infinite-scroll/src/App.jsx",["22"],"import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\n// intersection observer를 사용\n// https://www.youtube.com/watch?v=QOWq3_zpOK4&t=531s\n// https://heropy.blog/2019/10/27/intersection-observer/]\n\nfunction App() {\n  const [passengers, setPassengers] = useState([]);\n  const bottomRef = useRef(null);\n  const page = useRef(1);\n  const isLoading = useRef(false);\n\n  const scrollCallback = async (entries) => {\n    isLoading.current = !isLoading.current;\n    if (entries[0].isIntersecting) {\n      isLoading.current = !isLoading.current;\n      const { data } = await getMorePassengerInfo(page.current);\n      setPassengers((prev) => [...prev, ...data.data]);\n      page.current += 1;\n    };\n  };\n\n  useEffect(() => {\n    const {current} = bottomRef;\n    const observer = new IntersectionObserver(scrollCallback, {\n      root: null,\n      threshold: 1,\n    });\n    observer.observe(current);\n    return () => {\n      observer.disconnect(current);\n    }\n  }, [bottomRef.current]);\n\n  return (\n    <div className=\"container\" style={{padding: \"30px\"}}>\n      <div className=\"lists\">\n        {\n          passengers.map((passenger, idx) => {\n            const { airline, name, trips } = passenger;\n              return (\n                <div className=\"container\" style={{border: \"1px solid black\", padding: \"20px\"}} key={idx}>\n                  <div className=\"list\">\n                    <h4>User Info</h4>\n                    <p>name: {name}</p>\n                    <p>trips: {trips}</p>\n                    <h4>Airline Info</h4>\n                    <p>name: {airline.name}</p>\n                    <p>country: {airline.country}</p>\n                    <p>established: {airline.established}</p>\n                    <p>head quarter: {airline.head_quarters}</p>\n                    <p>website: {airline.website}</p>\n                  </div>\n                </div>\n              )\n            })\n        }\n      </div>\n      <div ref={bottomRef} />\n      {isLoading.current && <div>Loading...</div>}\n    </div>\n  );\n};\n\nconst getMorePassengerInfo = async (page) => {\n  return await axios.get(`https://api.instantwebtools.net/v1/passenger?page=${page}&size=10`)\n};\n\nexport default App;\n",["23","24"],"/Users/jaehyunan/Documents/TIL/simple-react-infinite-scroll/src/App2.jsx",["25","26"],"import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\n// addEventListener 사용\n// https://medium.com/@ghur2002/react%EC%97%90%EC%84%9C-infinite-scroll-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0-128d64ea24b5\n\nfunction App() {\n  const [passengers, setPassengers] = useState([]);\n  const bottomRef = useRef(null);\n  const page = useRef(1);\n  const isLoading = useRef(false);\n\n  const getData = async () => {\n    isLoading.current = !isLoading.current;\n    const { data } = await getMorePassengerInfo(page.current);\n    setPassengers(prev => [...prev, ...data.data]);\n    page.current += 1;\n  };\n\n  const infiniteScroll = () => {\n    let scrollHeight = Math.max(document.documentElement .scrollHeight, document.body.scrollHeight);\n    let scrollTop = Math.max(document.documentElement.scrollTop, document.body.scrollTop);\n    let clientHeight = document.documentElement.clientHeight;\n    if (scrollTop + clientHeight === scrollHeight) {\n      isLoading.current = !isLoading.current;\n      getData();\n    };\n  };\n\n  useEffect(() => {\n    getData();\n    window.addEventListener(\"scroll\", infiniteScroll, true);\n    return () => window.removeEventListener(\"scroll\", infiniteScroll);\n  }, []);\n\n  return (\n    <div className=\"container\" style={{padding: \"30px\"}}>\n      <div className=\"lists\">\n        {\n          passengers.map((passenger, idx) => {\n            const { airline, name, trips } = passenger;\n              return (\n                <div className=\"container\" style={{border: \"1px solid black\", padding: \"20px\"}} key={idx}>\n                  <div className=\"list\">\n                    <h4>User Info</h4>\n                    <p>name: {name}</p>\n                    <p>trips: {trips}</p>\n                    <h4>Airline Info</h4>\n                    <p>name: {airline.name}</p>\n                    <p>country: {airline.country}</p>\n                    <p>established: {airline.established}</p>\n                    <p>head quarter: {airline.head_quarters}</p>\n                    <p>website: {airline.website}</p>\n                  </div>\n                </div>\n              )\n            })\n        }\n      </div>\n      <div ref={bottomRef} />\n      {isLoading.current && <div>Loading...</div>}\n    </div>\n  );\n};\n\nconst getMorePassengerInfo = async (page) => {\n  return await axios.get(`https://api.instantwebtools.net/v1/passenger?page=${page}&size=10`)\n};\n\nexport default App;\n",{"ruleId":"27","severity":1,"message":"28","line":4,"column":8,"nodeType":"29","messageId":"30","endLine":4,"endColumn":11},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":33,"column":6,"nodeType":"37","endLine":33,"endColumn":25,"suggestions":"38"},{"ruleId":"31","replacedBy":"39"},{"ruleId":"33","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":20,"column":33,"nodeType":"43","messageId":"44","endLine":20,"endColumn":71,"fix":"45"},{"ruleId":"35","severity":1,"message":"46","line":33,"column":6,"nodeType":"37","endLine":33,"endColumn":8,"suggestions":"47"},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["48"],"no-negated-in-lhs",["49"],"react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'bottomRef.current'. Either exclude it or remove the dependency array. Mutable values like 'bottomRef.current' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["50"],["48"],["49"],"no-whitespace-before-property","Unexpected whitespace before property scrollHeight.","MemberExpression","unexpectedWhitespace",{"range":"51","text":"52"},"React Hook useEffect has a missing dependency: 'infiniteScroll'. Either include it or remove the dependency array.",["53"],"no-global-assign","no-unsafe-negation",{"desc":"54","fix":"55"},[707,709],".",{"desc":"56","fix":"57"},"Update the dependencies array to be: []",{"range":"58","text":"59"},"Update the dependencies array to be: [infiniteScroll]",{"range":"60","text":"61"},[986,1005],"[]",[1206,1208],"[infiniteScroll]"]